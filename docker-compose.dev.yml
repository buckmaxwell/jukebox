version: "3.7"

services:
  guest_app_dev:
    build:
      context: ./services/nginx/guest-app
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/nginx/guest-app/:/usr/src/app/
    ports:
      - 8080:8080
  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/nginx/guest-app/:/usr/src/app/
    ports:
      - 80:80
    depends_on:
      - room_settings
      - typeahead
      - player

  room_settings:
    build: ./services/room_settings
    volumes:
      - ./services/room_settings/:/usr/src/app/
    ports:
      - 5000:5000
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - rabbitmq

  player:
    build: ./services/player
    volumes:
      - ./services/player/:/usr/src/app/
    ports:
      - 5002:5002
    env_file:
      - ./.env.dev
    depends_on:
      - redis

  typeahead:
    build: ./services/typeahead
    volumes:
      - ./services/typeahead/:/usr/src/app/
    ports:
      - 5001:5001
    env_file:
      - ./.env.dev
    depends_on:
      - redis

  make_authorized_request:
    build: ./services/authorizer/workers/make_authorized_request
    volumes:
      - ./services/authorizer/workers/make_authorized_request/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - rabbitmq

  create_authorization:
    build: ./services/authorizer/workers/create_authorization
    volumes:
      - ./services/authorizer/workers/create_authorization/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - rabbitmq
      - postgres

  refresh_authorization:
    build: ./services/authorizer/workers/refresh_authorization
    volumes:
      - ./services/authorizer/workers/refresh_authorization/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - rabbitmq
      - postgres

  redis:
    image: redis:6

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15672:15672

  postgres:
    image: postgres:12
    env_file:
      - ./.env.dev
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  pgmanager:
    build: ./services/postgres
    volumes:
      - ./services/postgres/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - postgres

volumes:
  postgres-data:
